name: CI

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

  push:
    branches: [main]
  pull_request:
    branches: [main]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push server
        uses: docker/build-push-action@v5
        with:
           context: ./server
           file: ./server/Dockerfile
           push: true
           tags: ${{ secrets.DOCKERHUB_USERNAME }}/server:f311a22643086030e646fbd0301f9ced7f73d9bd

      # - name: Build and push client
      #   uses: docker/build-push-action@v5
      #   with: 
      #     context: ./client
      #     file: ./client/Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/client:345312954870252b07d970f8dd2f8bfce2b0d2d3

      # - name: Build and push mysql
      #   uses: docker/build-push-action@v5
      #   with: 
      #     context: ./mysql
      #     file: ./mysql/Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/mysql:09ba6105c04d36981c0d7caa1ebf14de12937308

  test_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}

      #- name: Build Backend
      #  run: |
      #    cd ./server
      #    npm install
      #    npm run build --if-present

      - name: Build Frontend
        run: |
          cd ./client
          npm install
          npm run build --if-present

  test_windows:
    name: Test on Windows
    runs-on: windows-latest
    needs: test_ubuntu
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}

      #- name: Build Backend
      #  run: |
      #    cd ./server
      #    npm install
      #    npm run build --if-present

      - name: Build Frontend
        run: |
          cd ./client
          npm install
          npm run build --if-present
